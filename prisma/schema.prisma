generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Mark {
  id     Int      @id @default(autoincrement())
  name   String   @unique @db.VarChar(20)
  Model  Model[]
  Engine Engine[]
}

model Model {
  id           Int            @id @default(autoincrement())
  marks        Mark           @relation(fields: [markId], references: [id])
  markId       Int
  name         String         @unique @db.VarChar(20)
  Modification Modification[]
  Body         Body[]
}

model Modification {
  id      Int    @id @default(autoincrement())
  models  Model  @relation(fields: [modelId], references: [id])
  modelId Int
  name    String @unique @db.VarChar(20)
  Car     Car[]
}

model Body {
  id      Int    @id @default(autoincrement())
  name    String @unique @db.VarChar(20)
  models  Model  @relation(fields: [modelId], references: [id])
  modelId Int
  Car     Car[]
}

model Engine {
  id            Int     @id @default(autoincrement())
  name          String  @unique @db.VarChar(20)
  volume        Int
  horsepower    Int     @db.UnsignedInt
  mediumExpense Decimal @db.Decimal(10, 1)
  marks         Mark    @relation(fields: [markId], references: [id])
  markId        Int
  Car           Car[]
}

model Car {
  id                Int                 @id @default(autoincrement())
  modifications     Modification        @relation(fields: [modificationId], references: [id])
  modificationId    Int
  bodys             Body                @relation(fields: [bodyId], references: [id])
  bodyId            Int
  engines           Engine              @relation(fields: [engineId], references: [id])
  engineId          Int
  km                Int
  Refill            Refill[]
  Replacement       Replacement[]
  ReplacementOption ReplacementOption[]
}

model Fuel {
  id     Int      @id @default(autoincrement())
  name   String
  Refill Refill[]
}

model Refill {
  id      Int      @id @default(autoincrement())
  cars    Car      @relation(fields: [carId], references: [id])
  carId   Int
  km      Int
  payment Int
  liter   Int
  price   Int
  fuels   Fuel     @relation(fields: [fuelId], references: [id])
  fuelId  Int
  date    DateTime
  desc    String
  expense Decimal  @db.Decimal(10, 1)
}

model ReplacementOption {
  id                Int             @id @default(autoincrement())
  cars              Car             @relation(fields: [carId], references: [id])
  carId             Int
  ReplacementTypes  ReplacementType @relation(fields: [replacementTypeId], references: [id])
  replacementTypeId Int
  repalceEvenKm     Int
}

model ReplacementType {
  id                Int                 @id @default(autoincrement())
  name              String
  Replacement       Replacement[]
  ReplacementOption ReplacementOption[]
}

model Replacement {
  id                Int             @id @default(autoincrement())
  cars              Car             @relation(fields: [carId], references: [id])
  carId             Int
  ReplacementTypes  ReplacementType @relation(fields: [replacementTypeId], references: [id])
  replacementTypeId Int
  km                Int
  payment           Int
  oil               String
  date              DateTime
  desc              String
}
